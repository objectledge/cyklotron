#
# Initial script for the CMS aggregation subsystem
#
# author <a href="mailto:pablo@ngo.pl">Pawel Potempski</a>
# author <a href="mailto:rkrzewsk@ngo.pl">Rafal Krzewski</a>
# version $Id: aggregation.rml,v 1.5.6.1 2005-08-02 15:22:33 pablo Exp $
#

ECHO ' - aggregation';

CREATE RESOURCE CLASS 'cms.aggregation.root'
JAVA CLASS 'net.cyklotron.cms.aggregation.AggregationNodeImpl'
HANDLER CLASS 'org.objectledge.coral.datatypes.GenericResourceHandler'
SUPERCLASSES ( 'node' )
ATTRIBUTES (
text replyTo
);

CREATE RESOURCE CLASS 'cms.aggregation.recommendation'
JAVA CLASS 'net.cyklotron.cms.aggregation.RecommendationResourceImpl'
HANDLER CLASS 'org.objectledge.coral.datatypes.GenericResourceHandler'
SUPERCLASSES ( 'node' )
ATTRIBUTES (
REQUIRED resource source,
REQUIRED resource(site.site) sourceSite,
REQUIRED integer status 				# 0 = pending
										# 1 = accepted
										# 2 = -rejected
);

CREATE RESOURCE CLASS 'cms.aggregation.recommendation_comment'
JAVA CLASS 'net.cyklotron.cms.aggregation.RecommendationCommentResourceImpl'
HANDLER CLASS 'org.objectledge.coral.datatypes.GenericResourceHandler'
SUPERCLASSES ( 'node' )
ATTRIBUTES (
REQUIRED text content
);

CREATE RESOURCE CLASS 'cms.aggregation.import'
JAVA CLASS 'net.cyklotron.cms.aggregation.ImportResourceImpl'
HANDLER CLASS 'org.objectledge.coral.datatypes.GenericResourceHandler'
SUPERCLASSES ( 'node' )
ATTRIBUTES (
REQUIRED resource(site.site) sourceSite, # for queries
REQUIRED long sourceId, 			 # weak reference
REQUIRED resource destination
);

# structural constrainsts
#
# "cms"
#  "sites"
#   (site.site) 1+
#    "applications"
#     "aggregation"
#      "recommendations"
#       (cms.aggregation.recommendation) 1+
#        (cms.aggregation.recommendation_comment) 1+
#      "imports"
#       (cms.aggregation.import) 1+

# importing
CREATE PERMISSION 'cms.aggregation.import';

ALTER RESOURCE CLASS 'node'
ADD PERMISSIONS (
cms.aggregation.import
);

# exporting/sharing
CREATE PERMISSION 'cms.aggregation.export';

ALTER RESOURCE CLASS 'site.site'
ADD PERMISSIONS (
        'cms.aggregation.export',
        'cms.aggregation.import'
);

