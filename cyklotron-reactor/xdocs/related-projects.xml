<?xml version="1.0" encoding="ISO-8859-1"?>
<document>
  <properties>
    <title>Related projects</title>
  </properties>
  
  <body>
    <section name="Related projects">
      <subsection name="ObjectLedge">
        <p>
          <a href="http://objectledge.org">ObjectLedge</a>
        </p>
        <p>
          Object Ledge is a platform for building applications in Java 2 Standard and Enterprise 
          Edition environments. 
        </p>
        <p>
          ObjectLedge follows component / container and Inversion Of Control design paradigms 
          implemented with the excelent <a href="http://picocontainer.org">PicoContainer</a> package.
        </p>
        <p>
          ObjectLedge provides a number of components - basic building blocks of the applications,
          a few extensions to the Pico framework, customized containers for easy deployment of
          applications in command line, daemon, and J2EE servlet environments.
        </p>
      </subsection>
      <subsection name="Coral">
        <p><a href="http://coral.objectledge.org">Coral</a></p>
        <p>Coral is as an object oriented database. It manages structured resources, that 
        can be mapped to Java objects in a JDBC relational database. </p>
        <p>Besides simple object persistency mechanism Coral provides an expressive security system, 
        many kinds of resources relations (intrinsic tree organization or resources, 
        reference attributes, set theory relations) and a powerful query facility that 
        can use attribute values and resource relations to select objects from the 
        store.</p>
        <p>The resources can be manipulated through Java API, or interactively using
        RML script language. Resource types can be created and modified at runtime 
        (existing resource instances are aproprietly adjusted). Java wrapper sources for
        the resources can be genereated using a Maven plugin from RML scripts, or a live
        database instance. Datatype schemata and security information can be exported
        to RML scripts, and resources can be imported/exported using XML.</p>
      </subsection>
    </section>
  </body>
</document>
